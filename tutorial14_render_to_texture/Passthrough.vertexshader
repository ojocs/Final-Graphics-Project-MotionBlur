#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;

// Output data ; will be interpolated for each fragment.
out vec2 UV;
out vec3 Position_worldspace;

void main(){
	gl_Position =  vec4(vertexPosition_modelspace,1);

	// Position of the vertex, in worldspace : M * position
	Position_worldspace = vertexPosition_modelspace;
	
	// UV of the vertex.
	UV = (vertexPosition_modelspace.xy+vec2(1,1))/2.0;

}

